// Generated by CoffeeScript 1.7.1
(function() {
  var SIFMText, dictionary, loremIpsum, _;

  _ = require('underscore');

  loremIpsum = require('lorem-ipsum');

  dictionary = require('./dictionary.js');

  SIFMText = (function() {
    var farm;

    farm = dictionary;

    function SIFMText(opts) {
      this.options = {
        count: 5,
        units: "paragraphs",
        format: "html"
      };
      _.each(opts, function(value, key) {
        return this.options[key] = value;
      }, this);
    }

    SIFMText.prototype.mixParagraph = function(mix) {
      var paragraph, sentances;
      sentances = _.range(1, Math.floor((Math.random() * 5) + 3));
      paragraph = "";
      _.each(sentances, function() {
        var ammountOfMix, cleanSentance, ipsum, sentance, words;
        ipsum = loremIpsum({
          units: "sentences"
        });
        words = ipsum.split(" ");
        ammountOfMix = mix.length;
        sentance = "";
        _.each(words, function(word, x) {
          var aPos, iPos;
          iPos = Math.floor((Math.random() * 5) + 2);
          aPos = (Math.floor((Math.random() * ammountOfMix) + 1)) - 1;
          if (x % iPos === 0) {
            word = mix[aPos];
          }
          return sentance += " " + word;
        }, this);
        cleanSentance = sentance.charAt(1).toUpperCase() + sentance.slice(2);
        if (cleanSentance.charAt(cleanSentance.length - 1) !== ".") {
          cleanSentance += ".";
        }
        return paragraph += cleanSentance + " ";
      }, this);
      return paragraph = "<p>" + paragraph + "</p>";
    };

    SIFMText.prototype.mixedIpsum = function(mix) {
      var paragraphs, sentance;
      paragraphs = _.range(1, this.options.count);
      sentance = "";
      _.each(paragraphs, function() {
        return sentance += this.mixParagraph(mix);
      }, this);
      return sentance;
    };

    SIFMText.prototype.ipsum = function() {
      return loremIpsum(this.options);
    };

    SIFMText.prototype.bacon = function() {
      return this.mixedIpsum(farm.meat);
    };

    return SIFMText;

  })();

  module.exports = SIFMText;

}).call(this);
