// Generated by CoffeeScript 1.6.3
(function() {
  var AWS, SIFMImg, fs, gm, request, s3, uuid;

  fs = require('fs');

  request = require('request');

  gm = require('gm');

  uuid = require('node-uuid');

  AWS = require('aws-sdk');

  AWS.config.update({
    accessKeyId: process.env.AWS_ACCESS_KEY_ID,
    secretAccessKey: process.env.AWS_SECRET_ACCESS_KEY,
    region: process.env.AWS_REGION
  });

  s3 = new AWS.S3();

  SIFMImg = (function() {
    function SIFMImg() {
      this.imgNum = Math.floor((Math.random() * 16) + 1);
    }

    SIFMImg.prototype.cat = function(cb) {
      var file, img, localImg, params, _imgNum;
      img = "http://s3-us-west-2.amazonaws.com/sayitforme/cats/" + this.imgNum + ".jpeg";
      localImg = "/tmp/" + uuid.v1() + ".jpeg";
      file = fs.createWriteStream(localImg);
      _imgNum = this.imgNum;
      file.on('close', function() {
        console.log("success");
        return cb(localImg);
      });
      params = {
        Bucket: 'sayitforme',
        Key: "cats/" + _imgNum + ".jpeg"
      };
      return s3.getObject(params).createReadStream().pipe(file);
    };

    SIFMImg.prototype.catbw = function(cb) {
      var file, img, localImg, params, _imgNum;
      img = "http://s3-us-west-2.amazonaws.com/sayitforme/cats/" + this.imgNum + ".jpeg";
      localImg = "/tmp/" + uuid.v1() + ".jpeg";
      file = fs.createWriteStream(localImg);
      _imgNum = this.imgNum;
      file.on('close', function() {
        var rs;
        rs = fs.createReadStream(localImg);
        return gm(rs, _imgNum + ".jpeg").type("Grayscale").write(localImg, function(err) {
          if (err) {
            console.log(err);
          }
          fs.readFile(localImg, function(lErr, lData) {
            if (lErr) {
              console.log(lErr);
            }
            return s3.client.putObject({
              ACL: 'public-read',
              Body: lData,
              Key: "cats/" + _imgNum + "-bw.jpeg",
              Bucket: "sayitforme"
            }, function(s3e, s3d) {
              if (s3e) {
                return console.log(s3e);
              }
            });
          });
          return cb(localImg);
        });
      });
      params = {
        Bucket: 'sayitforme',
        Key: "cats/" + _imgNum + "-bw.jpeg"
      };
      return s3.getObject(params).createReadStream().pipe(file);
    };

    SIFMImg.prototype.catsize = function(width, height, cb) {
      var img, localImg;
      img = "http://s3-us-west-2.amazonaws.com/sayitforme/cats/" + this.imgNum + ".jpeg";
      localImg = "/tmp/" + uuid.v1() + ".jpeg";
      return request(img, function(err, resp, body) {
        var rs;
        rs = fs.createReadStream(localImg);
        return gm(rs, this.imgNum + ".jpeg").resize(width, height).write(localImg, function(err) {
          if (err) {
            console.log(err);
          }
          return cb(localImg);
        });
      }).pipe(fs.createWriteStream(localImg));
    };

    SIFMImg.prototype.catsizebw = function(width, height, cb) {
      var img, localImg;
      img = "http://s3-us-west-2.amazonaws.com/sayitforme/cats/" + this.imgNum + ".jpeg";
      localImg = "/tmp/" + uuid.v1() + ".jpeg";
      return request(img, function(err, resp, body) {
        var rs;
        rs = fs.createReadStream(localImg);
        return gm(rs, this.imgNum + ".jpeg").resize(width, height).type("Grayscale").write(localImg, function(err) {
          if (err) {
            console.log(err);
          }
          return cb(localImg);
        });
      }).pipe(fs.createWriteStream(localImg));
    };

    return SIFMImg;

  })();

  module.exports = SIFMImg;

}).call(this);
